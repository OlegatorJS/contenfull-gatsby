{"version":3,"sources":["webpack:///./src/templates/blogpost.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","BlogPost","_ref","_data$contentfulBlogP","data","contentfulBlogPost","title","body","tags","a","createElement","className","alt","src","map","tag","key","to","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","Layout","Fragment","header","paddingTop","Date","getFullYear","href","_755544856","node"],"mappings":"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","file":"component---src-templates-blogpost-js-47ee760d1b94615cfab4.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nconst BlogPost = ({ data }) => {\n    const { title, body, tags } = data.contentfulBlogPost;\n    return (\n        <Layout>\n            <SEO title={title} />\n            <div className=\"blogpost\">\n                <h1>{title}</h1>\n                <img alt={title} src='' />\n                <div className=\"tags\">\n                    {tags.map(tag => (\n                        <span className=\"tag\" key={tag}>\n              {tag}\n            </span>\n                    ))}\n                </div>\n                <p className=\"body-text\">{body.body}</p>\n                <Link to=\"/blogposts\">View more posts</Link>\n                <Link to=\"/\">Back to Home</Link>\n            </div>\n        </Layout>\n    );\n};\nexport default BlogPost;\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    contentfulBlogPost(slug: { eq: $slug }) {\n      title\n      slug\n      body {\n        body\n      }\n      tags\n    }\n  }\n`;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}